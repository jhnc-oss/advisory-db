<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2025-08-15T12:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2025-0050: Vulnerability in id-map</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0050.html</id><updated>2025-08-15T12:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2025-0050.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0050: Vulnerability in id-map"/><published>2025-08-15T12:00:00+00:00</published><summary xml:lang="en">IdMap::from_iter may lead to uninitialized memory being freed on drop</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/id-map/RUSTSEC-2025-0050.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/id-map/RUSTSEC-2025-0050.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0050&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0050
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;IdMap::from_iter may lead to uninitialized memory being freed on drop&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-08-14&quot;&gt;
          August 14, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-08-15&quot;&gt;
          August 15, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/id-map.html&quot;&gt;id-map&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/id-map&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory-safety.html&quot;&gt;#memory-safety&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/uninitialized-memory.html&quot;&gt;#uninitialized-memory&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/andrewhickman/id-map/issues/4&quot;&gt;
              https://github.com/andrewhickman/id-map/issues/4
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=0.2.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;0.1.6&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;id_map::IdMap::from_iter&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=0.1.6, &amp;#60;=0.2.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Due to a flaw in the constructor &lt;code&gt;id_map::IdMap::from_iter&lt;/code&gt;, ill-formed objects may be created in which the amount of actually initialized memory is less than what is expected by the fields of &lt;code&gt;IdMap&lt;/code&gt;. Specifically, the field &lt;code&gt;ids&lt;/code&gt; is initialized based on the capacity of the vector &lt;code&gt;values&lt;/code&gt;, which is constructed from the provided iterator. However, the length of this vector may be smaller than its capacity.&lt;/p&gt;
&lt;p&gt;In such cases, when the resulting &lt;code&gt;IdMap&lt;/code&gt; is dropped, its destructor incorrectly assumes that &lt;code&gt;values&lt;/code&gt; contains &lt;code&gt;ids.len() == values.capacity()&lt;/code&gt; initialized elements and attempts to iterate over and drop them. This leads to dereferencing and attempting to free uninitialized memory, resulting in undefined behavior and potential segmentation faults.&lt;/p&gt;
&lt;p&gt;The bug was fixed in commit &lt;code&gt;fab6922&lt;/code&gt;, and all unsafe code was removed from the crate.&lt;/p&gt;
&lt;p&gt;Note that the maintainer recommends using the following alternatives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/slab&quot;&gt;slab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/slotmap&quot;&gt;slotmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0049: Vulnerability in scratchpad</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0049.html</id><updated>2025-08-14T12:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2025-0049.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0049: Vulnerability in scratchpad"/><published>2025-08-14T12:00:00+00:00</published><summary xml:lang="en">User-defined implementations of the safe trait scratchpad::Tracking can cause heap buffer overflows</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/scratchpad/RUSTSEC-2025-0049.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/scratchpad/RUSTSEC-2025-0049.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0049&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0049
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;User-defined implementations of the safe trait scratchpad::Tracking can cause heap buffer overflows&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-08-14&quot;&gt;
          August 14, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-08-14&quot;&gt;
          August 14, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/scratchpad.html&quot;&gt;scratchpad&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/scratchpad&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory-safety.html&quot;&gt;#memory-safety&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/buffer-overflow.html&quot;&gt;#buffer-overflow&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/raw-pointer.html&quot;&gt;#raw-pointer&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/okready/scratchpad/issues/2&quot;&gt;
              https://github.com/okready/scratchpad/issues/2
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;scratchpad::Tracking::get&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=1.3.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;scratchpad::Tracking::set&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=1.3.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods of the public trait &lt;code&gt;scratchpad::Tracking&lt;/code&gt; interact with unsafe code regions in the crate, and they influence the computation of addresses returned as raw pointers. However, the trait itself is not marked as unsafe, meaning users may provide custom implementations under the assumption that the crate upholds all safety guarantees.&lt;/p&gt;
&lt;p&gt;This becomes problematic because even safe implementations of &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;-written without using any unsafe code-can still result in ill-formed raw pointers. These pointers may later be dereferenced within safe APIs of the crate (e.g., &lt;code&gt;marker::MarkerBack::allocate_slice_copy&lt;/code&gt;), potentially leading to arbitrary memory access or heap buffer overflows.&lt;/p&gt;
&lt;p&gt;According to the &lt;a href=&quot;https://github.com/okready/scratchpad/commit/957dee1a3902f48600b06910e8e0b1d5ee7dab83&quot;&gt;penultimate commit&lt;/a&gt;, the crate is in maintenance mode awaiting a cleanup that will reduce the area of unsafe code. Note that the last commits to the repository are from 4 years ago.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0048: tsify-next is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0048.html</id><updated>2025-08-13T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2025-0048.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0048: tsify-next is unmaintained"/><published>2025-08-13T12:00:00+00:00</published><summary xml:lang="en">tsify-next is unmaintained, use tsify instead</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/tsify-next/RUSTSEC-2025-0048.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/tsify-next/RUSTSEC-2025-0048.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0048&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0048
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;tsify-next is unmaintained, use tsify instead&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-29&quot;&gt;
          July 29, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-08-13&quot;&gt;
          August 13, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/tsify-next.html&quot;&gt;tsify-next&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/tsify-next&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/siefkenj/tsify/pull/56&quot;&gt;
              https://github.com/siefkenj/tsify/pull/56
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/siefkenj/tsify/issues/57&quot;&gt;
              https://github.com/siefkenj/tsify/issues/57
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;tsify-next&lt;/code&gt; crate is not maintained any more; use &lt;a href=&quot;https://crates.io/crates/tsify&quot;&gt;&lt;code&gt;tsify&lt;/code&gt;&lt;/a&gt; instead.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0047: Vulnerability in slab</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0047.html</id><updated>2025-08-12T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2025-0047.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0047: Vulnerability in slab"/><published>2025-08-12T12:00:00+00:00</published><summary xml:lang="en">Out-of-bounds access in `get_disjoint_mut` due to incorrect bounds check</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/slab/RUSTSEC-2025-0047.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/slab/RUSTSEC-2025-0047.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0047&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0047
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Out-of-bounds access in &lt;code&gt;get_disjoint_mut&lt;/code&gt; due to incorrect bounds check&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-08-12&quot;&gt;
          August 12, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-08-12&quot;&gt;
          August 12, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/slab.html&quot;&gt;slab&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/slab&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory-exposure.html&quot;&gt;#memory-exposure&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/bounds-check.html&quot;&gt;#bounds-check&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-55159&quot;&gt;CVE-2025-55159&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-qx2v-8332-m4fv&quot;&gt;GHSA-qx2v-8332-m4fv&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/tokio-rs/slab/security/advisories/GHSA-qx2v-8332-m4fv&quot;&gt;
              https://github.com/tokio-rs/slab/security/advisories/GHSA-qx2v-8332-m4fv
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/tokio-rs/slab/pull/152&quot;&gt;
              https://github.com/tokio-rs/slab/pull/152
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=0.4.11&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;0.4.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;slab::Slab::get_disjoint_mut&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;=0.4.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h2&gt;Impact&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;get_disjoint_mut&lt;/code&gt; method in slab v0.4.10 incorrectly checked if indices were within the slab&apos;s capacity instead of its length, allowing access to uninitialized memory. This could lead to undefined behavior or potential crashes.&lt;/p&gt;
&lt;h2&gt;Patches&lt;/h2&gt;
&lt;p&gt;This has been fixed in slab v0.4.11.&lt;/p&gt;
&lt;h2&gt;Workarounds&lt;/h2&gt;
&lt;p&gt;Avoid using &lt;code&gt;get_disjoint_mut&lt;/code&gt; with indices that might be beyond the slab&apos;s actual length, or upgrade to v0.4.11 or later.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tokio-rs/slab/pull/152&quot;&gt;https://github.com/tokio-rs/slab/pull/152&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0046: Vulnerability in wasmtime</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0046.html</id><updated>2025-07-18T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2025-0046.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0046: Vulnerability in wasmtime"/><published>2025-07-18T12:00:00+00:00</published><summary xml:lang="en">Host panic with `fd_renumber` WASIp1 function</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/wasmtime/RUSTSEC-2025-0046.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/wasmtime/RUSTSEC-2025-0046.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0046&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0046
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Host panic with &lt;code&gt;fd_renumber&lt;/code&gt; WASIp1 function&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-18&quot;&gt;
          July 18, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-18&quot;&gt;
          July 18, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/wasmtime.html&quot;&gt;wasmtime&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/wasmtime&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-53901&quot;&gt;CVE-2025-53901&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-fm79-3f68-h2fc&quot;&gt;GHSA-fm79-3f68-h2fc&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-fm79-3f68-h2fc&quot;&gt;
              https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-fm79-3f68-h2fc
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;3.3 &lt;span class=&quot;tag low&quot;&gt;
        LOW
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;

      
      &lt;dd&gt;&lt;a href=&quot;https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L&quot;&gt;CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L&lt;/a&gt;&lt;/dd&gt;
      

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=34.0.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=33.0.2, &amp;#60;34.0.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=24.0.4, &amp;#60;25.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;10.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;This is an entry in the RustSec database for the Wasmtime security advisory
located at
https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-fm79-3f68-h2fc.
For more information see the GitHub-hosted security advisory.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0045: Unsoundness in static_cell</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0045.html</id><updated>2025-07-17T12:00:00+00:00</updated><category term="memory-exposure"/><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2025-0045.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0045: Unsoundness in static_cell"/><published>2025-07-17T12:00:00+00:00</published><summary xml:lang="en">ConstStaticCell could have been used to pass non-Send values to another thread</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/static_cell/RUSTSEC-2025-0045.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/static_cell/RUSTSEC-2025-0045.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0045&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0045
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;ConstStaticCell could have been used to pass non-Send values to another thread&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-17&quot;&gt;
          July 17, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-17&quot;&gt;
          July 17, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/static_cell.html&quot;&gt;static_cell&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/static_cell&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/send.html&quot;&gt;#send&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/thread-safety.html&quot;&gt;#thread-safety&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/embassy-rs/static-cell/issues/19&quot;&gt;
              https://github.com/embassy-rs/static-cell/issues/19
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=2.1.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=2.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;static_cell::ConstStaticCell::new&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;=2.1.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;&lt;code&gt;ConstStaticCell&amp;lt;T&amp;gt;&lt;/code&gt; could have been used to pass non-&lt;code&gt;Send&lt;/code&gt; values to another thread, because &lt;code&gt;T&lt;/code&gt; was not required to be &lt;code&gt;Send&lt;/code&gt; while &lt;code&gt;ConstStaticCell&lt;/code&gt; is &lt;code&gt;Send&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This was corrected by introducing a &lt;code&gt;T: Send&lt;/code&gt; bound.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0044: Vulnerability in slice-ring-buffer</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0044.html</id><updated>2025-07-14T12:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2025-0044.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0044: Vulnerability in slice-ring-buffer"/><published>2025-07-14T12:00:00+00:00</published><summary xml:lang="en">Four unique double-free vulnerabilities triggered via safe APIs</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/slice-ring-buffer/RUSTSEC-2025-0044.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/slice-ring-buffer/RUSTSEC-2025-0044.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0044&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0044
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Four unique double-free vulnerabilities triggered via safe APIs&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-06-16&quot;&gt;
          June 16, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-14&quot;&gt;
          July 14, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/slice-ring-buffer.html&quot;&gt;slice-ring-buffer&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/slice-ring-buffer&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory-safety.html&quot;&gt;#memory-safety&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/double-free.html&quot;&gt;#double-free&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/LiquidityC/slice_ring_buffer/issues/12&quot;&gt;
              https://github.com/LiquidityC/slice_ring_buffer/issues/12
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;slice_ring_buffer::IntoIter::clone&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=0.3.4&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;slice_ring_buffer::SliceRingBuffer::extend_from_slice&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=0.3.4&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;slice_ring_buffer::SliceRingBuffer::insert&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=0.3.4&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;slice_ring_buffer::SliceRingBuffer::shrink_to_fit&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=0.3.4&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The crate &lt;a href=&quot;https://crates.io/crates/slice-ring-buffer&quot;&gt;&lt;code&gt;slice-ring-buffer&lt;/code&gt;&lt;/a&gt; was developed as a fork of &lt;a href=&quot;https://crates.io/crates/slice-deque&quot;&gt;&lt;code&gt;slice-deque&lt;/code&gt;&lt;/a&gt; to continue maintenance and provide security patches, since the latter has been officially unmaintained (&lt;a href=&quot;https://rustsec.org/advisories/RUSTSEC-2020-0158.html&quot;&gt;RUSTSEC-2020-0158&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;While &lt;code&gt;slice-ring-buffer&lt;/code&gt; has addressed some previously reported memory safety issues inherited from its fork origin (&lt;a href=&quot;https://rustsec.org/advisories/RUSTSEC-2021-0047.html&quot;&gt;RUSTSEC-2021-0047&lt;/a&gt;), it still retains multiple unresolved memory corruption vulnerabilities.&lt;/p&gt;
&lt;p&gt;Specifically, we have discovered four new memory safety bugs, each resulting in double-free violations that can occur when only safe APIs are invoked. These vulnerabilities correspond to four distinct safe APIs in the crate, each exposing unsound and vulnerable behavior due to incorrect usage of unsafe code internally.&lt;/p&gt;
&lt;p&gt;Unfortunately, the maintainer doesn&apos;t have much availability to resolve these issues so there&apos;s no concrete timeline for fixes. Community contributions towards fixing these vulnerabilities would be much appreciated.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0043: Vulnerability in matrix-sdk-sqlite</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0043.html</id><updated>2025-07-11T12:00:00+00:00</updated><category term="format-injection"/><link href="https://rustsec.org/advisories/RUSTSEC-2025-0043.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0043: Vulnerability in matrix-sdk-sqlite"/><published>2025-07-11T12:00:00+00:00</published><summary xml:lang="en">matrix-sdk-sqlite: SQL injection vulnerability in `SqliteEventCacheStore::find_event_with_relations`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/matrix-sdk-sqlite/RUSTSEC-2025-0043.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/matrix-sdk-sqlite/RUSTSEC-2025-0043.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0043&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0043
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;matrix-sdk-sqlite: SQL injection vulnerability in &lt;code&gt;SqliteEventCacheStore::find_event_with_relations&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-11&quot;&gt;
          July 11, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-11&quot;&gt;
          July 11, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/matrix-sdk-sqlite.html&quot;&gt;matrix-sdk-sqlite&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/matrix-sdk-sqlite&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/format-injection.html&quot;&gt;format-injection&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/sql-injection.html&quot;&gt;#sql-injection&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-53549&quot;&gt;CVE-2025-53549&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-275g-g844-73jh&quot;&gt;GHSA-275g-g844-73jh&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-275g-g844-73jh&quot;&gt;
              https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-275g-g844-73jh
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=0.13.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;matrix_sdk_sqlite::SqliteEventCacheStore::find_event_relations&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;SqliteEventCacheStore::find_event_with_relations&lt;/code&gt; function constructs SQL
queries using &lt;code&gt;format!()&lt;/code&gt; with unescaped input, allowing an attacker to inject
arbitrary SQL. This results in a SQL injection vulnerability.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0042: Unsoundness in static-alloc</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0042.html</id><updated>2025-07-11T12:00:00+00:00</updated><category term="memory-exposure"/><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2025-0042.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0042: Unsoundness in static-alloc"/><published>2025-07-11T12:00:00+00:00</published><summary xml:lang="en">Uninitialized read after allocating MemBump</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/static-alloc/RUSTSEC-2025-0042.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/static-alloc/RUSTSEC-2025-0042.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0042&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0042
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Uninitialized read after allocating MemBump&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-11&quot;&gt;
          July 11, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-07-11&quot;&gt;
          July 11, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/static-alloc.html&quot;&gt;static-alloc&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/static-alloc&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/initialization.html&quot;&gt;#initialization&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/197g/static-alloc/issues/81&quot;&gt;
              https://github.com/197g/static-alloc/issues/81
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=0.2.6&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=0.2.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;static_alloc::unsync::MemBump::new&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=0.2.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The affected function, &lt;code&gt;MemBump::new()&lt;/code&gt;, would allocate memory without
initializing it. Subsequently calling the created value&apos;s various &lt;code&gt;alloc&lt;/code&gt;
methods would then read and write the start of that memory as a &lt;code&gt;Cell&lt;/code&gt; which is
undefined behavior. Instead, it should zero initialize the start of the
allocated memory.&lt;/p&gt;
&lt;p&gt;For instance, some values could violate the internal invariants of the type and
cause an assertion failure. Nevertheless, no deterministic read is known to
cause further uninitialized memory to be exposed.&lt;/p&gt;
&lt;p&gt;Affected downstream users that can not upgrade are advised to call
&lt;code&gt;MemBump::reset&lt;/code&gt; immediately after allocation to manually perform the missing
write of the counter best-as-possible.&lt;/p&gt;
&lt;p&gt;The flaw was corrected in commit d8d6a7d096d3aaafd963b356a8f1bbd8d26fd967 by
zeroing the Cell at the start of the allocated memory.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0442: Unsoundness in wasmtime-jit-debug</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0442.html</id><updated>2025-06-17T12:00:00+00:00</updated><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0442.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0442: Unsoundness in wasmtime-jit-debug"/><published>2025-06-17T12:00:00+00:00</published><summary xml:lang="en">Dump Undefined Memory by `JitDumpFile`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/wasmtime-jit-debug/RUSTSEC-2024-0442.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/wasmtime-jit-debug/RUSTSEC-2024-0442.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0442&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0442
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Dump Undefined Memory by &lt;code&gt;JitDumpFile&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-07-06&quot;&gt;
          July  6, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-06-17&quot;&gt;
          June 17, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/wasmtime-jit-debug.html&quot;&gt;wasmtime-jit-debug&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/wasmtime-jit-debug&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/issues/8905&quot;&gt;
              https://github.com/bytecodealliance/wasmtime/issues/8905
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#62;=24.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;wasmtime_jit_debug::perf_jitdump::JitDumpFile::dump_code_load_record&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;#60;=24.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The unsound function &lt;code&gt;dump_code_load_record&lt;/code&gt; uses &lt;code&gt;from_raw_parts&lt;/code&gt; to directly convert
the pointer &lt;code&gt;addr&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; into a slice without any validation and that memory block
would be dumped.&lt;/p&gt;
&lt;p&gt;Thus, the &apos;safe&apos; function dump_code_load_record is actually &apos;unsafe&apos; since it requires
the caller to guarantee that the addr is valid and len must not overflow.
Otherwise, the function could dump the memory into file illegally, causing memory leak.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this is an internal-only crate in the Wasmtime project not intended for
external use and is more strongly signaled nowadays as of
&lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/pull/10963&quot;&gt;bytecodealliance/wasmtime#10963&lt;/a&gt;.
Please open an issue in Wasmtime if you&apos;re using this crate directly.&lt;/p&gt;
&lt;/blockquote&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry></feed>