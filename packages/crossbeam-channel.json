[
  {
    "id": "RUSTSEC-2025-0024",
    "modified": "2025-04-10T12:29:37Z",
    "published": "2025-04-08T12:00:00Z",
    "aliases": [
      "TROVE-2025-013"
    ],
    "related": [],
    "summary": "crossbeam-channel: double free on Drop",
    "details": "The internal `Channel` type's `Drop` method has a race\nwhich could, in some circumstances, lead to a double-free.\nThis could result in memory corruption.\n\nQuoting from the\n[upstream description in merge request \\#1187](https://github.com/crossbeam-rs/crossbeam/pull/1187#issue-2980761131):\n\n> The problem lies in the fact that `dicard_all_messages` contained two paths that could lead to `head.block` being read but only one of them would swap the value. This meant that `dicard_all_messages` could end up observing a non-null block pointer (and therefore attempting to free it) without setting `head.block` to null. This would then lead to `Channel::drop` making a second attempt at dropping the same pointer.\n\nThe bug was introduced while fixing a memory leak, in\nupstream [MR \\#1084](https://github.com/crossbeam-rs/crossbeam/pull/1084),\nfirst published in 0.5.12.\n\nThe fix is in\nupstream [MR \\#1187](https://github.com/crossbeam-rs/crossbeam/pull/1187)\nand has been published in 0.5.15",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "crossbeam-channel",
          "purl": "pkg:cargo/crossbeam-channel"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": []
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "memory-corruption"
          ],
          "cvss": null,
          "informational": null
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.5.12-0"
              },
              {
                "fixed": "0.5.15"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/crossbeam-channel"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2025-0024.html"
      },
      {
        "type": "WEB",
        "url": "https://github.com/crossbeam-rs/crossbeam/pull/1187"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  },
  {
    "id": "RUSTSEC-2022-0019",
    "modified": "2023-06-13T13:10:24Z",
    "published": "2022-05-10T12:00:00Z",
    "aliases": [
      "GHSA-9g55-pg62-m8hh"
    ],
    "related": [],
    "summary": "Channel creates zero value of any type",
    "details": "Affected versions of this crate called `mem::zeroed()` to create values of a user-supplied type `T`.\nThis is unsound e.g. if `T` is a reference type (which must be non-null).\n \nThe flaw was corrected by avoiding the use of `mem::zeroed()`, using `MaybeUninit` instead.",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "crossbeam-channel",
          "purl": "pkg:cargo/crossbeam-channel"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": []
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [],
          "cvss": null,
          "informational": "unsound"
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.0.0-0"
              },
              {
                "fixed": "0.4.3"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/crossbeam-channel"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2022-0019.html"
      },
      {
        "type": "WEB",
        "url": "https://github.com/crossbeam-rs/crossbeam/pull/458"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  },
  {
    "id": "RUSTSEC-2020-0052",
    "modified": "2023-06-13T13:10:24Z",
    "published": "2020-06-26T12:00:00Z",
    "aliases": [
      "CVE-2020-15254",
      "CVE-2020-35904",
      "GHSA-m8h8-v6jh-c762",
      "GHSA-v5m7-53cv-f3hx"
    ],
    "related": [],
    "summary": "Undefined Behavior in bounded channel",
    "details": "The affected version of this crate's the `bounded` channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements.",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "crossbeam-channel",
          "purl": "pkg:cargo/crossbeam-channel"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": []
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "memory-corruption"
          ],
          "cvss": null,
          "informational": null
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.4.3"
              },
              {
                "fixed": "0.4.4"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/crossbeam-channel"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2020-0052.html"
      },
      {
        "type": "WEB",
        "url": "https://github.com/crossbeam-rs/crossbeam/pull/533"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  }
]