[
  {
    "id": "RUSTSEC-2021-0036",
    "modified": "2023-06-13T13:10:24Z",
    "published": "2021-03-03T12:00:00Z",
    "aliases": [
      "CVE-2021-28037",
      "GHSA-gppw-3h6h-v6q2"
    ],
    "related": [],
    "summary": "Intern<T>: Data race allowed on T",
    "details": "Affected versions of this crate unconditionally implements `Sync` for `Intern<T>`.\nThis allows users to create data race on `T: !Sync`, which may lead to undefined behavior\n(for example, memory corruption).\n\nThe flaw was corrected in commit 2928a87 by adding the trait bound `T: Sync` in the `Sync` impl of `Intern<T>`.",
    "severity": [
      {
        "type": "CVSS_V3",
        "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      }
    ],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "internment",
          "purl": "pkg:cargo/internment"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": []
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "thread-safety"
          ],
          "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "informational": null
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.0.0-0"
              },
              {
                "fixed": "0.4.2"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/internment"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2021-0036.html"
      },
      {
        "type": "REPORT",
        "url": "https://github.com/droundy/internment/issues/20"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  },
  {
    "id": "RUSTSEC-2020-0017",
    "modified": "2023-06-13T13:10:24Z",
    "published": "2020-05-28T12:00:00Z",
    "aliases": [
      "CVE-2020-35874",
      "GHSA-96w3-p368-4h8c"
    ],
    "related": [],
    "summary": "Use after free in ArcIntern::drop",
    "details": "`ArcIntern::drop` has a race condition where it can release memory\nwhich is about to get another user. The new user will get a reference\nto freed memory.\n\nThis was fixed by serializing access to an interned object while it\nis being deallocated.\n\nVersions prior to 0.3.12 used stronger locking which avoided the problem.",
    "severity": [
      {
        "type": "CVSS_V3",
        "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
      }
    ],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "internment",
          "purl": "pkg:cargo/internment"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": [
              "internment::ArcIntern::drop"
            ]
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "memory-corruption"
          ],
          "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "informational": null
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.3.12"
              },
              {
                "fixed": "0.4.0"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/internment"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2020-0017.html"
      },
      {
        "type": "REPORT",
        "url": "https://github.com/droundy/internment/issues/11"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  }
]