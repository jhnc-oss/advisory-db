[
  {
    "id": "RUSTSEC-2023-0045",
    "modified": "2023-07-08T12:30:19Z",
    "published": "2023-06-21T12:00:00Z",
    "aliases": [
      "GHSA-wfg4-322g-9vqv"
    ],
    "related": [],
    "summary": "memoffset allows reading uninitialized memory",
    "details": "memoffset allows attempt of reading data from address `0` with arbitrary type. This behavior is an undefined behavior because address `0` to `std::mem::size_of<T>` may not have valid bit-pattern with `T`. Old implementation dereferences uninitialized memory obtained from `std::mem::align_of`. Older implementation prior to it allows using uninitialized data obtained from `std::mem::uninitialized` with arbitrary type then compute offset by taking the address of field-projection. This may also result in an undefined behavior for \"father\" that includes (directly or transitively) type that [does not allow to be uninitialized](https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html).\n\nThis flaw was corrected by using `std::ptr::addr_of` in <https://github.com/Gilnaa/memoffset/pull/50>.",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "memoffset",
          "purl": "pkg:cargo/memoffset"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": [
              "memoffset::offset_of"
            ]
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "memory-corruption"
          ],
          "cvss": null,
          "informational": "unsound"
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.0.0-0"
              },
              {
                "fixed": "0.6.2"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/memoffset"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2023-0045.html"
      },
      {
        "type": "REPORT",
        "url": "https://github.com/Gilnaa/memoffset/issues/24"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  },
  {
    "id": "RUSTSEC-2019-0011",
    "modified": "2023-06-13T13:10:24Z",
    "published": "2019-07-16T12:00:00Z",
    "aliases": [
      "CVE-2019-15553",
      "GHSA-rh89-x75f-rh3c"
    ],
    "related": [],
    "summary": "Flaw in offset_of and span_of causes SIGILL, drops uninitialized memory of arbitrary type on panic in client code",
    "details": "Affected versions of this crate caused traps and/or memory unsafety by zero-initializing references.\nThey also could lead to uninitialized memory being dropped if the field for which the offset is requested was behind a deref coercion, and that deref coercion caused a panic.\n\nThe flaw was corrected by using `MaybeUninit`.",
    "severity": [
      {
        "type": "CVSS_V3",
        "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
      }
    ],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "memoffset",
          "purl": "pkg:cargo/memoffset"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": []
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [],
          "cvss": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
          "informational": "unsound"
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.0.0-0"
              },
              {
                "fixed": "0.5.0"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/memoffset"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2019-0011.html"
      },
      {
        "type": "REPORT",
        "url": "https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  }
]