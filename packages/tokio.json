[
  {
    "id": "RUSTSEC-2025-0023",
    "modified": "2025-10-28T06:02:18Z",
    "published": "2025-04-07T12:00:00Z",
    "aliases": [
      "GHSA-rr8g-9fpq-6wmg"
    ],
    "related": [],
    "summary": "Broadcast channel calls clone in parallel, but does not require `Sync`",
    "details": "The broadcast channel internally calls `clone` on the stored value when\nreceiving it, and only requires `T:Send`. This means that using the broadcast\nchannel with values that are `Send` but not `Sync` can trigger unsoundness if\nthe `clone` implementation makes use of the value being `!Sync`.\n\nThank you to Austin Bonander for finding and reporting this issue.",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "tokio",
          "purl": "pkg:cargo/tokio"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": []
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "memory-corruption"
          ],
          "cvss": null,
          "informational": "unsound"
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.2.5"
              },
              {
                "fixed": "1.38.2"
              },
              {
                "introduced": "1.39.0"
              },
              {
                "fixed": "1.42.1"
              },
              {
                "introduced": "1.43.0"
              },
              {
                "fixed": "1.43.1"
              },
              {
                "introduced": "1.44.0"
              },
              {
                "fixed": "1.44.2"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/tokio"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2025-0023.html"
      },
      {
        "type": "WEB",
        "url": "https://github.com/tokio-rs/tokio/pull/7232"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  },
  {
    "id": "RUSTSEC-2023-0005",
    "modified": "2023-06-13T13:10:24Z",
    "published": "2023-01-11T12:00:00Z",
    "aliases": [
      "GHSA-4q83-7cq4-p6wg"
    ],
    "related": [],
    "summary": "`tokio::io::ReadHalf<T>::unsplit` is Unsound",
    "details": "`tokio::io::ReadHalf<T>::unsplit` can violate the `Pin` contract\n\nThe soundness issue is described in the [tokio/issues#5372](https://github.com/tokio-rs/tokio/issues/5372)\n\nSpecific set of conditions needed to trigger an issue (a !Unpin type in ReadHalf)\nis unusual, combined with the difficulty of making any arbitrary use-after-free\nexploitable in Rust without doing a lot of careful alignment of data types in\nthe surrounding code.\n\nThe `tokio` feature `io-util` is also required to be enabled to trigger this\nsoundness issue.\n\nThanks to zachs18 reporting the issue to Tokio team responsibly and taiki-e\nand carllerche appropriately responding and fixing the soundness bug.\n\nTokio before 0.2.0 used `futures` 0.1 that did not have `Pin`, so it is not\naffected by this issue.",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "tokio",
          "purl": "pkg:cargo/tokio"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": []
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "memory-exposure"
          ],
          "cvss": null,
          "informational": "unsound"
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.2.0"
              },
              {
                "fixed": "1.18.5"
              },
              {
                "introduced": "1.19.0"
              },
              {
                "fixed": "1.20.4"
              },
              {
                "introduced": "1.21.0"
              },
              {
                "fixed": "1.24.2"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/tokio"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2023-0005.html"
      },
      {
        "type": "REPORT",
        "url": "https://github.com/tokio-rs/tokio/issues/5372"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  },
  {
    "id": "RUSTSEC-2023-0001",
    "modified": "2023-02-09T03:11:29Z",
    "published": "2023-01-04T12:00:00Z",
    "aliases": [
      "CVE-2023-22466",
      "GHSA-7rrj-xr53-82p7"
    ],
    "related": [],
    "summary": "reject_remote_clients Configuration corruption",
    "details": "On Windows, configuring a named pipe server with [pipe_mode] will force [ServerOptions]::[reject_remote_clients] as `false`.\n\nThis drops any intended explicit configuration for the [reject_remote_clients] that may have been set as `true` previously.\n\nThe default setting of [reject_remote_clients] is normally `true` meaning the default is also overridden as `false`.\n\n## Workarounds\n\nEnsure that [pipe_mode] is set first after initializing a [ServerOptions]. For example:\n\n```rust\nlet mut opts = ServerOptions::new();\nopts.pipe_mode(PipeMode::Message);\nopts.reject_remote_clients(true);\n```\n\n[ServerOptions]: https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html\n[pipe_mode]: https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.pipe_mode\n[reject_remote_clients]: https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.reject_remote_clients",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "tokio",
          "purl": "pkg:cargo/tokio"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [
              "windows"
            ],
            "functions": []
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [],
          "cvss": null,
          "informational": null
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "1.7.0"
              },
              {
                "fixed": "1.18.4"
              },
              {
                "introduced": "1.19.0"
              },
              {
                "fixed": "1.20.3"
              },
              {
                "introduced": "1.21.0"
              },
              {
                "fixed": "1.23.1"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/tokio"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2023-0001.html"
      },
      {
        "type": "ADVISORY",
        "url": "https://github.com/tokio-rs/tokio/security/advisories/GHSA-7rrj-xr53-82p7"
      },
      {
        "type": "WEB",
        "url": "https://github.com/tokio-rs/tokio/pull/5336"
      },
      {
        "type": "WEB",
        "url": "https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createnamedpipea#pipe_reject_remote_clients"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  },
  {
    "id": "RUSTSEC-2021-0124",
    "modified": "2023-06-13T13:10:24Z",
    "published": "2021-11-16T12:00:00Z",
    "aliases": [
      "CVE-2021-45710",
      "GHSA-fg7r-2g4j-5cgr"
    ],
    "related": [],
    "summary": "Data race when sending and receiving after closing a `oneshot` channel",
    "details": "If a `tokio::sync::oneshot` channel is closed (via the\n[`oneshot::Receiver::close`] method), a data race may occur if the\n`oneshot::Sender::send` method is called while the corresponding\n`oneshot::Receiver` is `await`ed or calling `try_recv`.\n\nWhen these methods are called concurrently on a closed channel, the two halves\nof the channel can concurrently access a shared memory location, resulting in a\ndata race. This has been observed to [cause memory corruption][corruption].\n\nNote that the race only occurs when **both** halves of the channel are used\nafter the `Receiver` half has called `close`. Code where `close` is not used, or where the\n`Receiver` is not `await`ed and `try_recv` is not called after calling `close`,\nis not affected.\n\nSee [tokio#4225][issue] for more details.\n\n[corruption]: https://github.com/tokio-rs/tokio/issues/4225#issuecomment-967434847\n[issue]: https://github.com/tokio-rs/tokio/issues/4225\n[`oneshot::Receiver::close`]: https://docs.rs/tokio/1.14.0/tokio/sync/oneshot/struct.Receiver.html#method.close",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "tokio",
          "purl": "pkg:cargo/tokio"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": [
              "tokio::sync::oneshot::Receiver::close"
            ]
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "memory-corruption",
            "thread-safety"
          ],
          "cvss": null,
          "informational": null
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.1.14"
              },
              {
                "fixed": "1.8.4"
              },
              {
                "introduced": "1.9.0"
              },
              {
                "fixed": "1.13.1"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/tokio"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2021-0124.html"
      },
      {
        "type": "REPORT",
        "url": "https://github.com/tokio-rs/tokio/issues/4225"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  },
  {
    "id": "RUSTSEC-2021-0072",
    "modified": "2023-06-13T13:10:24Z",
    "published": "2021-07-07T12:00:00Z",
    "aliases": [
      "CVE-2021-38191",
      "GHSA-2grh-hm3w-w7hv"
    ],
    "related": [],
    "summary": "Task dropped in wrong thread when aborting `LocalSet` task",
    "details": "When aborting a task with `JoinHandle::abort`, the future is dropped in the\nthread calling abort if the task is not currently being executed. This is\nincorrect for tasks spawned on a `LocalSet`.\n\nThis can easily result in race conditions as many projects use `Rc` or `RefCell`\nin their Tokio tasks for better performance.\n\nSee [tokio#3929][issue] for more details.\n\n[issue]: https://github.com/tokio-rs/tokio/issues/3929",
    "severity": [],
    "affected": [
      {
        "package": {
          "ecosystem": "crates.io",
          "name": "tokio",
          "purl": "pkg:cargo/tokio"
        },
        "ecosystem_specific": {
          "affects": {
            "arch": [],
            "os": [],
            "functions": [
              "tokio::task::JoinHandle::abort"
            ]
          },
          "affected_functions": null
        },
        "database_specific": {
          "categories": [
            "memory-corruption"
          ],
          "cvss": null,
          "informational": null
        },
        "ranges": [
          {
            "type": "SEMVER",
            "events": [
              {
                "introduced": "0.3.0"
              },
              {
                "fixed": "1.5.1"
              },
              {
                "introduced": "1.6.0"
              },
              {
                "fixed": "1.6.3"
              },
              {
                "introduced": "1.7.0"
              },
              {
                "fixed": "1.7.2"
              },
              {
                "introduced": "1.8.0"
              },
              {
                "fixed": "1.8.1"
              }
            ]
          }
        ],
        "versions": []
      }
    ],
    "references": [
      {
        "type": "PACKAGE",
        "url": "https://crates.io/crates/tokio"
      },
      {
        "type": "ADVISORY",
        "url": "https://rustsec.org/advisories/RUSTSEC-2021-0072.html"
      },
      {
        "type": "REPORT",
        "url": "https://github.com/tokio-rs/tokio/issues/3929"
      }
    ],
    "database_specific": {
      "license": "CC0-1.0"
    }
  }
]