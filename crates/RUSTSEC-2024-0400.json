{
  "id": "RUSTSEC-2024-0400",
  "modified": "2024-11-28T18:48:40Z",
  "published": "2024-11-28T12:00:00Z",
  "aliases": [],
  "related": [],
  "summary": "`ruzstd` uninit and out-of-bounds memory reads",
  "details": "Affected versions of `ruzstd` miscalculate the length of the allocated\nand init section of its internal `RingBuffer`, leading to uninitialized\nor out-of-bounds reads in `copy_bytes_overshooting` of up to 15 bytes.\n\nThis may result in up to 15 bytes of memory contents being written\ninto the decoded data when decompressing a crafted archive.\nThis may occur multiple times per archive.",
  "severity": [],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ruzstd",
        "purl": "pkg:cargo/ruzstd"
      },
      "ecosystem_specific": {
        "affects": {
          "arch": [],
          "os": [],
          "functions": []
        },
        "affected_functions": null
      },
      "database_specific": {
        "categories": [
          "memory-exposure"
        ],
        "cvss": null,
        "informational": null
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.7.0"
            },
            {
              "fixed": "0.7.3"
            }
          ]
        }
      ],
      "versions": []
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/ruzstd"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2024-0400.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/KillingSpark/zstd-rs/issues/75"
    },
    {
      "type": "WEB",
      "url": "https://github.com/KillingSpark/zstd-rs/pull/76"
    }
  ],
  "database_specific": {
    "license": "CC0-1.0"
  }
}